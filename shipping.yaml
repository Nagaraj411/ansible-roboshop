- name: configuration shipping server
  hosts: local
  connection: local
  become: true
  tasks:
  - name: install maven and mysq
    ansible.builtin.dnf:
      name: "{{ item }}"  # install maven package & mysql
      state: installed
    loop:
    - maven
    - mysql

  - name: install PyMySQL and cryptography 
    ansible.builtin.pip:
      name: "{{ item }}"
      executable: pip3.9   # use pip3.9 to install the required python packages
    loop:
    - cryptography # cryptography is used for secure communication
    - PyMySQL # PyMySQL is a MySQL client for Python
    # pip3.9 package management tool for Python 3.9

  - name: create app directory
    ansible.builtin.file:  # create a directory for the application
      path: /app
      state: directory
      
  - name: add system user
    ansible.builtin.user: # create a system shipping for the application
      name: roboshop
      shell: /sbin/nologin
      home: /app
      system: true

  - name: download shipping code
    ansible.builtin.get_url:
      url: https://roboshop-artifacts.s3.amazonaws.com/shipping-v3.zip
      dest: /tmp/shipping.zip

  - name: extract or unzip shipping code
    ansible.builtin.unarchive:
      src: /tmp/shipping.zip
      dest: /app
      remote_src: yes # this means the source file is already on the remote shipping server 

  - name: install maven dependencies
    ansible.builtin.command: mvn clean package
    args: # this command runs the maven clean package command to build the application
      chdir: /app  # change directory to /app before running the command & come put

  - name: rename jar file
    ansible.builtin.command: mv target/shipping-1.0.jar shipping.jar 
    args:
      chdir: /app  # change directory to /app before running the command
    
  - name: copy shipping service file
    ansible.builtin.copy:
      src: shipping.service
      dest: /etc/systemd/system/shipping.service

  - name: systemctl daemon reload
    ansible.builtin.systemd_service: # daemon reload to recognize the new service file
      daemon_reload: true

  - name: start and enable shipping
    ansible.builtin.service:
      name: shipping
      state: started
      enabled: yes

  - name: import data
    ansible.mysql.mysql_db:
      name: all
      login_user: root
      login_password: RoboShop@1
      login_host: localhost # mysql.devops84.shop
      state: import
      target: "{{ item }}"
    loop:
    - /app/db/schema.sql
    - /app/db/app-user.sql
    - /app/db/master-data.sql

    - name: restart shipping
    tags:
      - import
    ansible.builtin.service:
        name: shipping
        state: restarted
